services:
  # nginx
  nginx:
    container_name: nginx
    build:
      context: ./nginx
    ports:
      - "80:80"
      - "443:443"
    networks:
      - backbone
    depends_on:
      - server
      - cdek
      - bot_server
    volumes:
      - media:/media/
      - static:/static/

  # Backend
  server:
    container_name: server
    hostname: server
    restart: always
    build:
      context: ./server
    ports:
      - "8000:8000"
    expose:
      - 8000
    env_file:
      - ./server/.env
    networks:
      - backbone
    volumes:
      - media:/app/media/
      - static:/app/static/

  cdek:
    container_name: cdek
    hostname: cdek
    restart: always
    build:
      context: ./cdek
    ports:
      - "8002:8002"
    expose:
      - 8002
    env_file:
      - ./cdek/.env
    networks:
      - backbone

  # Bot

  # bot:
  #   container_name: bot
  #   restart: always
  #   build:
  #     context: ./bot
  #     dockerfile: Bot.Dockerfile
  #   env_file:
  #     - ./bot/.env
  #   networks:
  #     - backbone

  bot_server:
    container_name: bot_server
    hostname: bot_server
    restart: always
    build:
      context: ./bot
      dockerfile: Server.Dockerfile
    ports:
      - "8005:8005"
    expose:
      - 8005
    env_file:
      - ./bot/.env
    networks:
      - backbone

  # Database

  redis:
    image: redis:latest
    hostname: redis
    container_name: redis
    environment:
      - REDIS_DATABASES=1
    restart: always
    ports:
      - "6379:6379"
    networks:
      - backbone

networks:
  backbone:
    driver: bridge

volumes:
  media:
  static:
